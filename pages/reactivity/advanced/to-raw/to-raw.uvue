<template>
  <view class="page">
    <view class="flex justify-between flex-row mb-10">
      <text>check toRaw ref:</text>
      <text id="check-to-raw-ref">{{ checkToRawRef }}</text>
    </view>
    <view class="flex justify-between flex-row mb-10">
      <text>check toRaw reactive:</text>
      <text id="check-to-raw-reactive">{{ checkToRawReactive }}</text>
    </view>
    <view class="flex justify-between flex-row mb-10">
      <text>check toRaw readonly:</text>
      <text id="check-to-raw-readonly">{{ checkToRawReadonly }}</text>
    </view>
    <view class="flex justify-between flex-row mb-10">
      <text>check toRaw shallowReactive:</text>
      <text id="check-to-raw-shallow-reactive">{{
        checkToRawShallowReactive
      }}</text>
    </view>
    <view class="flex justify-between flex-row mb-10">
      <text>check toRaw shallowReadonly:</text>
      <text id="check-to-raw-shallow-readonly">{{
        checkToRawShallowReadonly
      }}</text>
    </view>
  </view>
</template>

<script setup lang="uts">
const obj = {}

const refObj = ref(obj);
const checkToRawRef = toRaw<UTSJSONObject>(refObj) === obj;

const reactiveObj = reactive(obj);
const checkToRawReactive = toRaw<UTSJSONObject>(reactiveObj) === obj;

const readonlyObj = readonly(obj);
const checkToRawReadonly = toRaw<UTSJSONObject>(readonlyObj) === obj;

const shallowReactiveObj = shallowReactive(obj);
const checkToRawShallowReactive = toRaw<UTSJSONObject>(shallowReactiveObj) === obj;

const shallowReadonlyObj = shallowReadonly(obj);
const checkToRawShallowReadonly = toRaw<UTSJSONObject>(shallowReadonlyObj) === obj;
</script>
