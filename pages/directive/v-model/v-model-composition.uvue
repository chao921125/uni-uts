<template>
  <view class="page">
    <Foo
      v-model="str"
      v-model:msg="msg"
      v-model:strArr="strArr"
      v-model:numArr="numArr"
      @update:modelValue="handleModelValueUpdate"
      @update:msg="handleModelMsgUpdate"
       />
    <input class="mb-10 input" id="model-value-input" v-model="str" />
    <input class="mb-10 input" id="model-msg-input" v-model="msg" />
    <view class="mb-10 flex justify-between flex-row">
      <text>handle modelValue update res:</text>
      <text id="handle-model-value-update-res">{{ handleModelValueUpdateRes }}</text>
    </view>
    <view class="mb-10 flex justify-between flex-row">
      <text>handle model msg update res:</text>
      <text id="handle-model-msg-update-res">{{ handleModelMsgUpdateRes }}</text>
    </view>
    <Parent v-model="value"></Parent>
  </view>
</template>

<script setup lang="uts">
import Foo from './Foo-composition.uvue'
import Parent from './Parent.uvue'

const str = ref('str')
const msg = ref('msg')
const strArr = ref<string[]>(['0'])
const numArr = ref<number[]>([0])
const value = ref("nested");
const handleModelValueUpdateRes = ref('')
const handleModelValueUpdate = (val : string) => {
  handleModelValueUpdateRes.value = val
}
const handleModelMsgUpdateRes = ref('')
const handleModelMsgUpdate = (val : string) => {
  handleModelMsgUpdateRes.value = val
}
</script>

<style>
.input {
  padding: 0px 10px;
  height: 40px;
  border: 1px solid #ccc;
  border-radius: 4px;
}
</style>
