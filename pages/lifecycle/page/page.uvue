<template>
  <!-- #ifdef APP -->
  <scroll-view style="flex: 1">
    <!-- #endif -->
    <view class="uni-padding-wrap container">
      <text>page lifecycle</text>
      <button @click="scrollToBottom">scrollToBottom</button>
    </view>
    <!-- #ifdef APP -->
  </scroll-view>
  <!-- #endif -->
</template>

<script lang="uts">
import { State, state, setLifeCycleNum } from '@/store/index.uts'

export default {
  data() {
    return {
      isScrolled: false,
    }
  },
  onLoad(_ : OnLoadOptions) {
    // 自动化测试
    setLifeCycleNum(state.lifeCycleNum + 100)
  },
  onShow() {
    // 自动化测试
    setLifeCycleNum(state.lifeCycleNum + 10)
  },
  onReady() {
    // 自动化测试
    setLifeCycleNum(state.lifeCycleNum + 10)
  },
  onPullDownRefresh() {
    // 自动化测试
    setLifeCycleNum(state.lifeCycleNum + 10)
  },
  onPageScroll(_) {
    // 自动化测试
    this.isScrolled = true
  },
  onReachBottom() {
    // 自动化测试
    setLifeCycleNum(state.lifeCycleNum + 10)
  },
  onBackPress(_ : OnBackPressOptions) : boolean | null {
    // 自动化测试
    setLifeCycleNum(state.lifeCycleNum - 10)
    return null
  },
  onHide() {
    // 自动化测试
    setLifeCycleNum(state.lifeCycleNum - 10)
  },
  onUnload() {
    // 自动化测试
    setLifeCycleNum(state.lifeCycleNum - 100)
  },
  methods: {
    // 自动化测试
    getLifeCycleNum() : number {
      return state.lifeCycleNum
    },
    // 自动化测试
    setLifeCycleNum(num : number) {
      setLifeCycleNum(num)
    },
    pullDownRefresh() {
      uni.startPullDownRefresh({
        success() {
          setTimeout(() => {
            uni.stopPullDownRefresh()
          }, 1000)
        },
      })
    },
    scrollToBottom() {
      uni.pageScrollTo({
        scrollTop: 2000,
      })
    },
  },
}
</script>

<style>
.container {
  height: 1200px;
}
</style>
